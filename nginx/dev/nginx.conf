error_log /var/log/nginx/nginx_error.log warn;

# auto detects a good number of processes to run
worker_processes auto;

# Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by worker process.
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}

http {
    # Security
    server_tokens off;
    proxy_hide_header X-Powered-By;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com; img-src 'self' https://ssl.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://themes.googleusercontent.com; frame-src; object-src 'none'";
    # Sets path, format and configuration for a buffered log write.
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';
    include /etc/nginx/mime.types;

    server {
        # Listen on port 80
        listen 80 default_server;
        # Save logs here
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        # Root directory
        root /var/www;
        # What files to serve as index
        index index.html;

        # Public folder is subfolder in www
        location /public {
            root /var/www;
            try_files $uri $uri/ /index.html;
        }

        location / {
            # First attempt to serve request as file then as directory, then fall back to index.html
            try_files $uri $uri/ /index.html
        }

        # Media files: images, icons, videos, audios, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
            expires_1M;
            access_log off;
            add_header Cache-Control "public";
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri=404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # Any route containing a file extension (e.g. js)
        location ~ ^.+\..+$ {
            try_files $uri=404;
        }

        # This redirect to backend address
        location /api/v1 {
            add_header Cache-Control "public";
            proxy_pass http://archivia-service:4000/api/v1;
        }
    }
}